{"version":3,"file":"Growler.js","sources":["Growler.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","lang","Style","domConstruct","fx","domClass","topic","Growler","templateString","postCreate","this","inherited","arguments","own","subscribe","hitch","growl","props","mixin","_container","containerNode","g","Growl","startup","title","message","level","timeout","opacity","_timer","set","domNode","place","growlMessageNode","innerHTML","anim","setTimeout","publish","source","error","hoverOver","clearInterval","add","hoverOut","remove","close","height","margin","partial","destroy"],"mappings":";;;;;AAAAA,QACI,qBACA,oBACA,wBACA,kBACA,iBACA,qBACA,gBACA,iBACA,aACA,wCACD,SAAUC,EAASC,EAAaC,EAAiBC,EAAMC,EAAOC,EAAcC,EAAIC,EAAUC,GAGzF,GAAIC,GAAUT,GAASC,EAAaC,IAChCQ,eAAgB,6EAChBC,WAAY,WACRC,KAAKC,UAAUC,WACfF,KAAKG,IAAIP,EAAMQ,UAAU,gBAAiBb,EAAKc,MAAML,KAAM,YAE/DM,MAAO,SAAUC,GACbA,EAAQA,MACRhB,EAAKiB,MAAMD,GACPE,WAAYT,KAAKU,eAErB,IAAIC,GAAI,GAAIC,GAAML,EAClBI,GAAEE,aAKND,EAAQxB,GAASC,EAAaC,IAC9BQ,eAAgB,8LAChBgB,MAAO,QACPC,QAAS,UACTC,MAAO,UACPC,QAAS,IACTC,QAAS,EACTT,WAAY,KACZU,OAAQ,KACRpB,WAAY,WACRC,KAAKC,UAAUC,WACXF,KAAKS,YACLjB,EAAM4B,IAAIpB,KAAKqB,QAAS,UAAW,GACnC5B,EAAa6B,MAAMtB,KAAKqB,QAASrB,KAAKS,YACtCT,KAAKuB,iBAAiBC,UAAYxB,KAAKe,QACvCrB,EAAG+B,KAAKzB,KAAKqB,SACTH,QAASlB,KAAKkB,SACf,KACHlB,KAAK0B,cAEL9B,EAAM+B,QAAQ,sBACVC,OAAQ,UACRC,MAAO,0CAInBH,WAAY,WACJ1B,KAAKiB,QAAU,IACfjB,KAAKmB,OAASO,WAAWnC,EAAKc,MAAML,KAAM,SAAUA,KAAKiB,WAGjEa,UAAW,WACPC,cAAc/B,KAAKmB,QACnBxB,EAASqC,IAAIhC,KAAKqB,QAAS,UAE/BY,SAAU,WACFjC,KAAKiB,QAAU,GACfjB,KAAK0B,aAET/B,EAASuC,OAAOlC,KAAKqB,QAAS,UAElCc,MAAO,WACHzC,EAAG+B,KAAKzB,KAAKqB,SACTH,QAAS,GACV,IAAK,KAAM3B,EAAKc,MAAML,KAAM,YAEnCkC,OAAQ,WACJxC,EAAG+B,KAAKzB,KAAKqB,SACTe,OAAQ,EACRC,OAAQ,GACT,IAAK,KAAM9C,EAAK+C,QAAQ7C,EAAa8C,QAASvC,KAAKqB,YAG9D,OAAOxB","sourcesContent":["define([\n    'dojo/_base/declare',\n    'dijit/_WidgetBase',\n    'dijit/_TemplatedMixin',\n    'dojo/_base/lang',\n    'dojo/dom-style',\n    'dojo/dom-construct',\n    'dojo/_base/fx',\n    'dojo/dom-class',\n    'dojo/topic',\n    'xstyle/css!./Growler/css/Growler.css'\n], function (declare, _WidgetBase, _TemplatedMixin, lang, Style, domConstruct, fx, domClass, topic) {\n\n    // main growler dijit container\n    var Growler = declare([_WidgetBase, _TemplatedMixin], {\n        templateString: '<div class=\"gis-dijit-Growl\" data-dojo-attach-point=\"containerNode\"></div>',\n        postCreate: function () {\n            this.inherited(arguments);\n            this.own(topic.subscribe('growler/growl', lang.hitch(this, 'growl')));\n        },\n        growl: function (props) {\n            props = props || {};\n            lang.mixin(props, {\n                _container: this.containerNode\n            });\n            var g = new Growl(props);\n            g.startup();\n        }\n    });\n\n    // the growl itself\n    var Growl = declare([_WidgetBase, _TemplatedMixin], {\n        templateString: '<div class=\"growl ${level}\" data-dojo-attach-event=\"onmouseover:hoverOver,onmouseout:hoverOut,onclick:close\"><h3>${title}</h3><span data-dojo-attach-point=\"growlMessageNode\"></span></div>',\n        title: 'Title',\n        message: 'Message',\n        level: 'default',\n        timeout: 10000,\n        opacity: 1.0,\n        _container: null,\n        _timer: null,\n        postCreate: function () {\n            this.inherited(arguments);\n            if (this._container) {\n                Style.set(this.domNode, 'opacity', 0);\n                domConstruct.place(this.domNode, this._container);\n                this.growlMessageNode.innerHTML = this.message;\n                fx.anim(this.domNode, {\n                    opacity: this.opacity\n                }, 250);\n                this.setTimeout();\n            } else {\n                topic.publish('viewer/handleError', {\n                    source: 'Growler',\n                    error: 'Growl container not found/specified.'\n                });\n            }\n        },\n        setTimeout: function () {\n            if (this.timeout > 0) {\n                this._timer = setTimeout(lang.hitch(this, 'close'), this.timeout);\n            }\n        },\n        hoverOver: function () {\n            clearInterval(this._timer);\n            domClass.add(this.domNode, 'hover');\n        },\n        hoverOut: function () {\n            if (this.timeout > 0) {\n                this.setTimeout();\n            }\n            domClass.remove(this.domNode, 'hover');\n        },\n        close: function () {\n            fx.anim(this.domNode, {\n                opacity: 0\n            }, 500, null, lang.hitch(this, 'remove'));\n        },\n        remove: function () {\n            fx.anim(this.domNode, {\n                height: 0,\n                margin: 0\n            }, 250, null, lang.partial(domConstruct.destroy, this.domNode));\n        }\n    });\n    return Growler;\n});"]}