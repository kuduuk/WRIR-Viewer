{"version":3,"file":"MapInfo.js","sources":["MapInfo.js"],"names":["define","declare","WidgetBase","TemplatedMixin","lang","html","style","number","topic","proj4","map","mode","firstCoord","unitScale","showScale","showZoom","xLabel","yLabel","scaleLabel","zoomLabel","minWidth","proj4Catalog","proj4Wkid","proj4CustomURL","_mode","_projection","_projectionLoaded","constructor","options","safeMixin","this","ts","fc","templateString","postCreate","loaded","_initialize","on","hitch","publish","source","error","destroy","wkid","spatialReference","window","Proj4js","require","toLowerCase","set","domNode","_setScale","_setZoom","_setCoords","evt","pnt","mapPoint","scale","_xCoord","round","x","_yCoord","y","_decToDMS","getLongitude","getLatitude","_project","projPnt","defs","inverse","getScale","isNaN","scaleNode","String","format","zoomNode","getLevel","value","xNode","yNode","l","type","dir","abs","Math","deg","parseInt","min","minInt","sec","minIntTxt","secTxt"],"mappings":"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","sourcesContent":["/*\n * show mouse coords, scale and zoom\n */\ndefine([\n    'dojo/_base/declare',\n    'dijit/_WidgetBase',\n    'dijit/_TemplatedMixin',\n    'dojo/_base/lang',\n    'dojo/html',\n    'dojo/dom-style',\n    'dojo/number',\n    'dojo/topic',\n    '//cdnjs.cloudflare.com/ajax/libs/proj4js/2.3.3/proj4.js',\n    'xstyle/css!./MapInfo/css/MapInfo.css'\n], function (\n    declare,\n    WidgetBase,\n    TemplatedMixin,\n    lang,\n    html,\n    style,\n    number,\n    topic,\n    proj4\n) {\n    'use strict';\n    return declare([WidgetBase, TemplatedMixin], {\n        map: null,\n        mode: 'map',\n        firstCoord: 'x',\n        unitScale: 2,\n        showScale: false,\n        showZoom: false,\n        xLabel: 'X:',\n        yLabel: 'Y:',\n        scaleLabel: '1:',\n        zoomLabel: 'Z:',\n        minWidth: 0,\n        proj4Catalog: null,\n        proj4Wkid: null,\n        proj4CustomURL: null,\n        //0 = Web Mercator as grid\n        //1 = Web Mercator as dec or DMS\n        //2 = geographic as dec (grid) or DMS\n        //3 = grid unprojected\n        //4 = grid projected as dec or DMS\n        _mode: 0,\n        _projection: null,\n        _projectionLoaded: false,\n        constructor: function (options) {\n            declare.safeMixin(this, options || {});\n            //template\n            var ts = '<div class=\"gis-dijit-MapInfo\">';\n            if (this.showScale) {\n                ts += '${scaleLabel}<span data-dojo-attach-point=\"scaleNode\"></span>&nbsp;&nbsp;';\n            }\n            if (this.showZoom) {\n                ts += '${zoomLabel}<span data-dojo-attach-point=\"zoomNode\"></span>&nbsp;&nbsp;';\n            }\n            var fc = this.firstCoord;\n            if (fc === 'x') {\n                ts += '${xLabel}<span data-dojo-attach-point=\"xNode\"></span>&nbsp;&nbsp;${yLabel}<span data-dojo-attach-point=\"yNode\"></span>';\n            } else if (fc === 'y') {\n                ts += '${yLabel}<span data-dojo-attach-point=\"yNode\"></span>&nbsp;&nbsp;${xLabel}<span data-dojo-attach-point=\"xNode\"></span>';\n            } else {\n                this.firstCoord = 'x';\n                ts += '${xLabel}<span data-dojo-attach-point=\"xNode\"></span>&nbsp;&nbsp;${yLabel}<span data-dojo-attach-point=\"yNode\"></span>';\n            }\n            ts += '</div>';\n            this.templateString = ts;\n        },\n        postCreate: function () {\n            var map = this.map;\n            if (!map) {\n                topic.publish('viewer/handleError', {\n                    source: 'MapInfo',\n                    error: 'A map reference is required'\n                });\n                this.destroy();\n                return;\n            }\n            //initialize when map loaded\n            if (map.loaded) {\n                this._initialize(map);\n            } else {\n                map.on('load', lang.hitch(this, '_initialize', map));\n            }\n        },\n        _initialize: function (map) {\n            var wkid = map.spatialReference.wkid,\n                mode = this.mode;\n            if (wkid === 102100 && mode !== 'dec' && mode !== 'dms') {\n                this._mode = 0; //assume wm grid\n            } else if (wkid === 102100) {\n                this._mode = 1; //assume wm and proj to geo\n            } else if (wkid === 4326) {\n                this._mode = 2;\n            } else if (mode !== 'dec' && mode !== 'dms') {\n                this._mode = 3;\n            } else {\n                this._mode = 4;\n                // spatialreference.org uses the old\n                // Proj4js style so we need an alias\n                // https://github.com/proj4js/proj4js/issues/23\n                window.Proj4js = proj4;\n                //load custom projection file or default to spatialreference.org\n                if (!this.proj4Catalog && !this.proj4Wkid && !this.proj4CustomURL) {\n                    topic.publish('viewer/handleError', {\n                        source: 'MapInfo',\n                        error: 'MapInfo error::a proj4Catalog/proj4Wkid or custom URL must be defined'\n                    });\n                    return;\n                }\n                if (this.proj4CustomURL) {\n                    require([this.proj4CustomURL], lang.hitch(this, function () {\n                        this._projectionLoaded = true;\n                        this._projection = this.proj4Catalog + ':' + this.proj4Wkid;\n                    }));\n                } else {\n                    require(['http://spatialreference.org/ref/' + this.proj4Catalog.toLowerCase() + '/' + this.proj4Wkid + '/proj4js/'], lang.hitch(this, function () {\n                        this._projectionLoaded = true;\n                        this._projection = this.proj4Catalog + ':' + this.proj4Wkid;\n                    }));\n                }\n            }\n            if (this.minWidth) {\n                style.set(this.domNode, 'minWidth', this.minWidth + 'px');\n            }\n            if (this.showScale) {\n                this._setScale();\n                map.on('zoom-end', lang.hitch(this, '_setScale'));\n            }\n            if (this.showZoom) {\n                this._setZoom();\n                map.on('zoom-end', lang.hitch(this, '_setZoom'));\n            }\n            map.on('mouse-move, mouse-drag', lang.hitch(this, '_setCoords'));\n        },\n        _setCoords: function (evt) {\n            var pnt = evt.mapPoint,\n                mode = this.mode,\n                scale = this.unitScale;\n            switch (this._mode) {\n            case 0:\n            case 3:\n                this._xCoord(number.round(pnt.x, scale));\n                this._yCoord(number.round(pnt.y, scale));\n                break;\n            case 1:\n                if (mode === 'dms') {\n                    this._xCoord(this._decToDMS(pnt.getLongitude(), 'x'));\n                    this._yCoord(this._decToDMS(pnt.getLatitude(), 'y'));\n                } else {\n                    this._xCoord(number.round(pnt.getLongitude(), scale));\n                    this._yCoord(number.round(pnt.getLatitude(), scale));\n                }\n                break;\n            case 2:\n                if (mode === 'dms') {\n                    this._xCoord(this._decToDMS(pnt.x, 'x'));\n                    this._yCoord(this._decToDMS(pnt.y, 'y'));\n                } else {\n                    this._xCoord(number.round(pnt.x, scale));\n                    this._yCoord(number.round(pnt.y, scale));\n                }\n                break;\n            case 4:\n                if (this._projectionLoaded) {\n                    this._project(pnt);\n                }\n                break;\n            }\n        },\n        _project: function (pnt) {\n            var projPnt = proj4(proj4.defs[this._projection]).inverse([pnt.x, pnt.y]);\n            if (this.mode === 'dms') {\n                this._xCoord(this._decToDMS(projPnt[0], 'x'));\n                this._yCoord(this._decToDMS(projPnt[1], 'y'));\n            } else {\n                this._xCoord(number.round(projPnt[0], this.unitScale));\n                this._yCoord(number.round(projPnt[1], this.unitScale));\n            }\n        },\n        _setScale: function () {\n            var scale = this.map.getScale();\n            if (scale === null || isNaN(scale)) {\n                return;\n            }\n            html.set(this.scaleNode, String(number.format(number.round(scale, 0))));\n        },\n        _setZoom: function () {\n            html.set(this.zoomNode, String(this.map.getLevel()));\n        },\n        _xCoord: function (value) {\n            html.set(this.xNode, String(value));\n        },\n        _yCoord: function (value) {\n            html.set(this.yNode, String(value));\n        },\n        _decToDMS: function (l, type) {\n            var dir = '?',\n                abs = Math.abs(l),\n                deg = parseInt(abs, 10),\n                min = (abs - deg) * 60,\n                minInt = parseInt(min, 10),\n                sec = number.round((min - minInt) * 60, this.unitScale),\n                minIntTxt = (minInt < 10) ? '0' + minInt : minInt,\n                secTxt = (sec < 10) ? '0' + sec : sec;\n            if (type === 'lat' || type === 'y') {\n                dir = (l > 0) ? 'N' : 'S';\n            }\n            if (type === 'lng' || type === 'x') {\n                dir = (l > 0) ? 'E' : 'W';\n            }\n            return deg + '&deg;' + minIntTxt + '\\'' + secTxt + '\"&nbsp;' + dir;\n        }\n    });\n});"]}