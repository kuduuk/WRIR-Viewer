{"version":3,"file":"Print.js","sources":["Print.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","_WidgetsInTemplateMixin","PrintTask","Memory","lang","array","topic","Style","domConstruct","domClass","printTemplate","printResultTemplate","PrintTemplate","PrintParameters","esriRequest","i18n","PrintDijit","widgetsInTemplate","templateString","map","count","results","authorText","copyrightText","defaultTitle","defaultFormat","defaultLayout","baseClass","pdfIcon","require","toUrl","imageIcon","printTaskURL","printTask","postCreate","this","inherited","arguments","printparams","outSpatialReference","spatialReference","url","content","f","handleAs","callbackParamName","load","hitch","error","operationalLayersInspector","opLayers","forEach","layer","id","featureCollection","layers","fcLayer","featureSet","features","feature","attributes","symbol","font","family","_handleError","err","publish","source","_handlePrintInfo","data","async","executionType","Layout_Template","filter","parameters","param","name","length","layoutItems","choiceList","item","sort","a","b","layout","layoutDijit","set","defaultValue","Format","formatItems","format","formatDijit","print","printSettingsFormDijit","isValid","form","get","preserve","preserveFormDijit","mixin","layoutForm","layoutFormDijit","mapQualityForm","mapQualityFormDijit","mapOnlyForm","mapOnlyFormDijit","template","preserveScale","eval","label","title","exportOptions","layoutOptions","legendLayers","legend","titleText","scalebarUnit","fileHandle","execute","result","PrintResultDijit","toString","icon","docName","placeAt","printResultsNode","own","printGp","on","clearActionBarNode","validate","clearResults","empty","then","_onPrintComplete","nameNode","innerHTML","add","resultNode","_onPrintError","printResults","errorMessage","_openPrint","window","open","_handleStatusUpdate","event","jobStatus","jobInfo"],"mappings":";;;;;AAAAA,QACI,qBACA,oBACA,wBACA,gCACA,uBACA,oBACA,kBACA,mBACA,aACA,iBACA,qBACA,iBACA,yCACA,+CACA,2BACA,6BACA,eACA,iCAEA,kBACA,6BACA,+BACA,2BACA,oBACA,sBACA,oBACA,4BACA,sBACA,yBACA,oCACD,SAAUC,QAASC,YAAaC,gBAAiBC,wBAAyBC,UAAWC,OAAQC,KAAMC,MAAOC,MAAOC,MAAOC,aAAcC,SAAUC,cAAeC,oBAAqBC,cAAeC,gBAAiBC,YAAaC,MAGhO,GAAIC,YAAalB,SAASC,YAAaC,gBAAiBC,0BACpDgB,mBAAmB,EACnBC,eAAgBR,cAChBK,KAAMA,KACNI,IAAK,KACLC,MAAO,EACPC,WACAC,WAAY,KACZC,cAAe,KACfC,aAAc,KACdC,cAAe,KACfC,cAAe,KACfC,UAAW,iBACXC,QAASC,QAAQC,MAAM,kCACvBC,UAAWF,QAAQC,MAAM,oCACzBE,aAAc,KACdC,UAAW,KACXC,WAAY,WACRC,KAAKC,UAAUC,WACfF,KAAKG,YAAc,GAAIzB,iBACvBsB,KAAKG,YAAYnB,IAAMgB,KAAKhB,IAC5BgB,KAAKG,YAAYC,oBAAsBJ,KAAKhB,IAAIqB,iBAEhD1B,aACI2B,IAAKN,KAAKH,aACVU,SACIC,EAAG,QAEPC,SAAU,OACVC,kBAAmB,WACnBC,KAAM1C,KAAK2C,MAAMZ,KAAM,oBACvBa,MAAO5C,KAAK2C,MAAMZ,KAAM,mBAIhCc,2BAA4B,SAAUC,GAalC,MAZA7C,OAAM8C,QAAQD,EAAU,SAAUE,GACd,6BAAZA,EAAMC,IACNhD,MAAM8C,QAAQC,EAAME,kBAAkBC,OAAQ,SAAUC,GACpDnD,MAAM8C,QAAQK,EAAQC,WAAWC,SAAU,SAAUC,SAC1CA,GAAQC,WACfD,EAAQE,OAAOC,KAAKC,OAAS,gBAOtCb,GAEXc,aAAc,SAAUC,GACpB3D,MAAM4D,QAAQ,sBACVC,OAAQ,QACRnB,MAAOiB,KAGfG,iBAAkB,SAAUC,GACxBlC,KAAKF,UAAY,GAAI/B,WAAUiC,KAAKH,cAChCsC,MAA8B,kCAAvBD,EAAKE,eAEhB,IAAIC,GAAkBnE,MAAMoE,OAAOJ,EAAKK,WAAY,SAAUC,GAC1D,MAAsB,oBAAfA,EAAMC,MAEjB,IAA+B,IAA3BJ,EAAgBK,OAKhB,WAJAvE,OAAM4D,QAAQ,sBACVC,OAAQ,QACRnB,MAAO,yEAIf,IAAI8B,GAAczE,MAAMc,IAAIqD,EAAgB,GAAGO,WAAY,SAAUC,GACjE,OACIJ,KAAMI,EACN3B,GAAI2B,IAGZF,GAAYG,KAAK,SAAUC,EAAGC,GAC1B,MAAQD,GAAEN,KAAOO,EAAEP,KAAQ,EAAMO,EAAEP,KAAOM,EAAEN,KAAQ,GAAK,GAE7D,IAAIQ,GAAS,GAAIjF,SACbkE,KAAMS,GAEV3C,MAAKkD,YAAYC,IAAI,QAASF,GAC1BjD,KAAKT,cACLS,KAAKkD,YAAYC,IAAI,QAASnD,KAAKT,eAEnCS,KAAKkD,YAAYC,IAAI,QAASd,EAAgB,GAAGe,aAGrD,IAAIC,GAASnF,MAAMoE,OAAOJ,EAAKK,WAAY,SAAUC,GACjD,MAAsB,WAAfA,EAAMC,MAEjB,IAAsB,IAAlBY,EAAOX,OAKP,WAJAvE,OAAM4D,QAAQ,sBACVC,OAAQ,QACRnB,MAAO,6DAIf,IAAIyC,GAAcpF,MAAMc,IAAIqE,EAAO,GAAGT,WAAY,SAAUC,GACxD,OACIJ,KAAMI,EACN3B,GAAI2B,IAGZS,GAAYR,KAAK,SAAUC,EAAGC,GAC1B,MAAQD,GAAEN,KAAOO,EAAEP,KAAQ,EAAMO,EAAEP,KAAOM,EAAEN,KAAQ,GAAK,GAE7D,IAAIc,GAAS,GAAIvF,SACbkE,KAAMoB,GAEVtD,MAAKwD,YAAYL,IAAI,QAASI,GAC1BvD,KAAKV,cACLU,KAAKwD,YAAYL,IAAI,QAASnD,KAAKV,eAEnCU,KAAKwD,YAAYL,IAAI,QAASE,EAAO,GAAGD,eAIhDK,MAAO,WACH,GAAIzD,KAAK0D,uBAAuBC,UAAW,CACvC,GAAIC,MAAO5D,KAAK0D,uBAAuBG,IAAI,SACvCC,SAAW9D,KAAK+D,kBAAkBF,IAAI,QAC1C5F,MAAK+F,MAAMJ,KAAME,SACjB,IAAIG,YAAajE,KAAKkE,gBAAgBL,IAAI,SACtCM,eAAiBnE,KAAKoE,oBAAoBP,IAAI,SAC9CQ,YAAcrE,KAAKsE,iBAAiBT,IAAI,QAC5C5F,MAAK+F,MAAMK,YAAaF,eAExB,IAAII,UAAW,GAAI9F,cACnB8F,UAAShB,OAASK,KAAKL,OACvBgB,SAAStB,OAASW,KAAKX,OAEvBsB,SAASC,cAAgBC,KAAKb,KAAKY,eAEnCD,SAASG,MAAQd,KAAKe,MACtBJ,SAASK,cAAgBP,YACzBE,SAASM,eACL1F,WAAYa,KAAKb,WACjBC,cAAeY,KAAKZ,cACpB0F,aAAeb,WAAWc,OAAOrC,OAAS,GAAKuB,WAAWc,OAAO,GAAM,QACvEC,UAAWpB,KAAKe,MAChBM,aAAchB,WAAWgB,cAE7BjF,KAAKG,YAAYoE,SAAWA,QAE5B,IAAIW,YAAalF,KAAKF,UAAUqF,QAAQnF,KAAKG,aACzCiF,OAAS,GAAIC,mBACbpG,MAAOe,KAAKf,MAAMqG,WAClBC,KAAuB,QAAhB3B,KAAKL,OAAoBvD,KAAKP,QAAUO,KAAKJ,UACpD4F,QAAS5B,KAAKe,MACdA,MAAOf,KAAKL,OAAS,KAAOK,KAAKX,OACjCiC,WAAYA,aACbO,QAAQzF,KAAK0F,iBAAkB,OAE7B1F,MAAKF,UAAUqC,OAChBiD,OAAOO,IAAK3F,KAAKF,UAAU8F,QAAQC,GAAI,gBAAiB5H,KAAK2C,MAAOwE,OAAQ,yBAIhFhH,MAAM+E,IAAInD,KAAK8F,mBAAoB,UAAW,SAC9C9F,KAAKf,YAELe,MAAK0D,uBAAuBqC,YAGpCC,aAAc,WACV3H,aAAa4H,MAAMjG,KAAK0F,kBACxBtH,MAAM+E,IAAInD,KAAK8F,mBAAoB,UAAW,QAC9C9F,KAAKf,MAAQ,KAKjBoG,iBAAmB1H,SAASC,YAAaC,gBAAiBC,0BAC1DgB,mBAAmB,EACnBC,eAAgBP,oBAChBI,KAAMA,KACN0B,IAAK,KACL4E,WAAY,KACZnF,WAAY,WACRC,KAAKC,UAAUC,WACfF,KAAKkF,WAAWgB,KAAKjI,KAAK2C,MAAMZ,KAAM,oBAAqB/B,KAAK2C,MAAMZ,KAAM,mBAEhFmG,iBAAkB,SAAUjE,GACpBA,EAAK5B,KACLN,KAAKM,IAAM4B,EAAK5B,IAChBN,KAAKoG,SAASC,UAAY,sBAAwBrG,KAAKwF,QAAU,UACjElH,SAASgI,IAAItG,KAAKuG,WAAY,qBAE9BvG,KAAKwG,cAAexG,KAAKpB,KAAK6H,aAAaC,eAGnDF,cAAe,SAAU1E,GACrB3D,MAAM4D,QAAQ,sBACVC,OAAQ,QACRnB,MAAOiB,IAEX9B,KAAKoG,SAASC,UAAY,sBAAwBzH,KAAK6H,aAAaC,aAAe,UACnFpI,SAASgI,IAAItG,KAAKuG,WAAY,qBAElCI,WAAY,WACS,OAAb3G,KAAKM,KACLsG,OAAOC,KAAK7G,KAAKM,MAGzBwG,oBAAqB,SAAWC,GAC5B,GAAIC,GAAYD,EAAME,QAAQD,SACX,mBAAdA,GACDhH,KAAKwG,cAAexG,KAAKpB,KAAK6H,aAAaC,gBAIvD,OAAO7H","sourcesContent":["define([\n    'dojo/_base/declare',\n    'dijit/_WidgetBase',\n    'dijit/_TemplatedMixin',\n    'dijit/_WidgetsInTemplateMixin',\n    'esri/tasks/PrintTask',\n    'dojo/store/Memory',\n    'dojo/_base/lang',\n    'dojo/_base/array',\n    'dojo/topic',\n    'dojo/dom-style',\n    'dojo/dom-construct',\n    'dojo/dom-class',\n    'dojo/text!./Print/templates/Print.html',\n    'dojo/text!./Print/templates/PrintResult.html',\n    'esri/tasks/PrintTemplate',\n    'esri/tasks/PrintParameters',\n    'esri/request',\n    'dojo/i18n!./Print/nls/resource',\n\n    'dijit/form/Form',\n    'dijit/form/FilteringSelect',\n    'dijit/form/ValidationTextBox',\n    'dijit/form/NumberTextBox',\n    'dijit/form/Button',\n    'dijit/form/CheckBox',\n    'dijit/ProgressBar',\n    'dijit/form/DropDownButton',\n    'dijit/TooltipDialog',\n    'dijit/form/RadioButton',\n    'xstyle/css!./Print/css/Print.css'\n], function (declare, _WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin, PrintTask, Memory, lang, array, topic, Style, domConstruct, domClass, printTemplate, printResultTemplate, PrintTemplate, PrintParameters, esriRequest, i18n) {\n\n    // Main print dijit\n    var PrintDijit = declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin], {\n        widgetsInTemplate: true,\n        templateString: printTemplate,\n        i18n: i18n,\n        map: null,\n        count: 1,\n        results: [],\n        authorText: null,\n        copyrightText: null,\n        defaultTitle: null,\n        defaultFormat: null,\n        defaultLayout: null,\n        baseClass: 'gis_PrintDijit',\n        pdfIcon: require.toUrl('gis/dijit/Print/images/pdf.png'),\n        imageIcon: require.toUrl('gis/dijit/Print/images/image.png'),\n        printTaskURL: null,\n        printTask: null,\n        postCreate: function () {\n            this.inherited(arguments);\n            this.printparams = new PrintParameters();\n            this.printparams.map = this.map;\n            this.printparams.outSpatialReference = this.map.spatialReference;\n\n            esriRequest({\n                url: this.printTaskURL,\n                content: {\n                    f: 'json'\n                },\n                handleAs: 'json',\n                callbackParamName: 'callback',\n                load: lang.hitch(this, '_handlePrintInfo'),\n                error: lang.hitch(this, '_handleError')\n            });\n            //aspect.after(this.printTask, '_createOperationalLayers', this.operationalLayersInspector, false);\n        },\n        operationalLayersInspector: function (opLayers) {\n            array.forEach(opLayers, function (layer) {\n                if (layer.id == 'Measurement_graphicslayer') {\n                    array.forEach(layer.featureCollection.layers, function (fcLayer) {\n                        array.forEach(fcLayer.featureSet.features, function (feature) {\n                            delete feature.attributes;\n                            feature.symbol.font.family = 'Courier';\n                            //feature.symbol.font.variant = esri.symbol.Font.VARIANT_NORMAL;\n                            //feature.symbol.font.size = '32pt';\n                        });\n                    });\n                }\n            });\n            return opLayers;\n        },\n        _handleError: function (err) {\n            topic.publish('viewer/handleError', {\n                source: 'Print',\n                error: err\n            });\n        },\n        _handlePrintInfo: function (data) {\n            this.printTask = new PrintTask(this.printTaskURL, {\n                async: data.executionType === 'esriExecutionTypeAsynchronous'\n            });\n            var Layout_Template = array.filter(data.parameters, function (param) {\n                return param.name === 'Layout_Template';\n            });\n            if (Layout_Template.length === 0) {\n                topic.publish('viewer/handleError', {\n                    source: 'Print',\n                    error: 'Print service parameters name for templates must be \\'Layout_Template\\''\n                });\n                return;\n            }\n            var layoutItems = array.map(Layout_Template[0].choiceList, function (item) {\n                return {\n                    name: item,\n                    id: item\n                };\n            });\n            layoutItems.sort(function (a, b) {\n                return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0);\n            });\n            var layout = new Memory({\n                data: layoutItems\n            });\n            this.layoutDijit.set('store', layout);\n            if (this.defaultLayout) {\n                this.layoutDijit.set('value', this.defaultLayout);\n            } else {\n                this.layoutDijit.set('value', Layout_Template[0].defaultValue);\n            }\n\n            var Format = array.filter(data.parameters, function (param) {\n                return param.name === 'Format';\n            });\n            if (Format.length === 0) {\n                topic.publish('viewer/handleError', {\n                    source: 'Print',\n                    error: 'Print service parameters name for format must be \\'Format\\''\n                });\n                return;\n            }\n            var formatItems = array.map(Format[0].choiceList, function (item) {\n                return {\n                    name: item,\n                    id: item\n                };\n            });\n            formatItems.sort(function (a, b) {\n                return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0);\n            });\n            var format = new Memory({\n                data: formatItems\n            });\n            this.formatDijit.set('store', format);\n            if (this.defaultFormat) {\n                this.formatDijit.set('value', this.defaultFormat);\n            } else {\n                this.formatDijit.set('value', Format[0].defaultValue);\n            }\n\n        },\n        print: function () {\n            if (this.printSettingsFormDijit.isValid()) {\n                var form = this.printSettingsFormDijit.get('value');\n                var preserve = this.preserveFormDijit.get('value');\n                lang.mixin(form, preserve);\n                var layoutForm = this.layoutFormDijit.get('value');\n                var mapQualityForm = this.mapQualityFormDijit.get('value');\n                var mapOnlyForm = this.mapOnlyFormDijit.get('value');\n                lang.mixin(mapOnlyForm, mapQualityForm);\n\n                var template = new PrintTemplate();\n                template.format = form.format;\n                template.layout = form.layout;\n                /*jslint evil: true */\n                template.preserveScale = eval(form.preserveScale); //turns a string 'true' into true\n                /*jslint evil: false */\n                template.label = form.title;\n                template.exportOptions = mapOnlyForm;\n                template.layoutOptions = {\n                    authorText: this.authorText,\n                    copyrightText: this.copyrightText,\n                    legendLayers: (layoutForm.legend.length > 0 && layoutForm.legend[0]) ? null : [],\n                    titleText: form.title,\n                    scalebarUnit: layoutForm.scalebarUnit\n                };\n                this.printparams.template = template;\n\n                var fileHandle = this.printTask.execute(this.printparams);\n                var result = new PrintResultDijit({\n                    count: this.count.toString(),\n                    icon: (form.format === 'PDF') ? this.pdfIcon : this.imageIcon,\n                    docName: form.title,\n                    title: form.format + ', ' + form.layout,\n                    fileHandle: fileHandle\n                }).placeAt(this.printResultsNode, 'last');\n\n                if ( this.printTask.async ) {\n                    result.own( this.printTask.printGp.on( 'status-update', lang.hitch( result, '_handleStatusUpdate' ) ) );\n                }\n\n\n                Style.set(this.clearActionBarNode, 'display', 'block');\n                this.count++;\n            } else {\n                this.printSettingsFormDijit.validate();\n            }\n        },\n        clearResults: function () {\n            domConstruct.empty(this.printResultsNode);\n            Style.set(this.clearActionBarNode, 'display', 'none');\n            this.count = 1;\n        }\n    });\n\n    // Print result dijit\n    var PrintResultDijit = declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin], {\n        widgetsInTemplate: true,\n        templateString: printResultTemplate,\n        i18n: i18n,\n        url: null,\n        fileHandle: null,\n        postCreate: function () {\n            this.inherited(arguments);\n            this.fileHandle.then(lang.hitch(this, '_onPrintComplete'), lang.hitch(this, '_onPrintError'));\n        },\n        _onPrintComplete: function (data) {\n            if (data.url) {\n                this.url = data.url;\n                this.nameNode.innerHTML = '<span class=\"bold\">' + this.docName + '</span>';\n                domClass.add(this.resultNode, 'printResultHover');\n            } else {\n                this._onPrintError( this.i18n.printResults.errorMessage );\n            }\n        },\n        _onPrintError: function (err) {\n            topic.publish('viewer/handleError', {\n                source: 'Print',\n                error: err\n            });\n            this.nameNode.innerHTML = '<span class=\"bold\">' + i18n.printResults.errorMessage + '</span>';\n            domClass.add(this.resultNode, 'printResultError');\n        },\n        _openPrint: function () {\n            if (this.url !== null) {\n                window.open(this.url);\n            }\n        },\n        _handleStatusUpdate: function ( event ) {\n            var jobStatus = event.jobInfo.jobStatus;\n            if ( jobStatus === 'esriJobFailed' ){\n                this._onPrintError( this.i18n.printResults.errorMessage );\n            }\n        }\n    });\n    return PrintDijit;\n});"]}