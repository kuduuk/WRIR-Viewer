{"version":3,"file":"Geocoder.js","sources":["Geocoder.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","a11yclick","lang","on","domClass","domStyle","Geocoder","MenuItem","SimpleMarkerSymbol","Graphic","InfoTemplate","GraphicsLayer","template","i18n","templateString","baseClass","expanded","collapsible","geocoderOptions","autoComplete","reverseGeocodeTemplate","join","postCreate","this","inherited","arguments","options","mixin","map","geocoder","geocoderNode","hitch","e","result","show","hide","own","searchNode","toggle","startup","mapRightClickMenu","addRightClickMenu","mapExtentSearch","arcgisGeocoder","searchExtent","extent","getExtent","evt","mapRightClickPoint","mapPoint","addChild","label","labels","getAddressHere","onClick","symbol","infoTemplate","graphics","id","addLayer","display","get","searchContainerNode","set","remove","containerNode","blur","add","focus","reverseGeocode","_task","locationToAddress","reverseGeocodeComplete","res","graphic","location","address","infoWindow","clearFeatures","setTitle","getTitle","setContent","getContent","screenPnt","toScreen","getInfoWindowAnchor","once","clear"],"mappings":"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","sourcesContent":["// adapted from https://github.com/esri/arcgis-dijit-geocoder-button-js/\ndefine([\n    'dojo/_base/declare',\n    'dijit/_WidgetBase',\n    'dijit/_TemplatedMixin',\n    'dijit/a11yclick',\n    'dojo/_base/lang',\n    'dojo/on',\n    'dojo/dom-class',\n    'dojo/dom-style',\n    'esri/dijit/Geocoder',\n    'dijit/MenuItem',\n    'esri/symbols/SimpleMarkerSymbol',\n    'esri/graphic',\n    'esri/InfoTemplate',\n    'esri/layers/GraphicsLayer',\n    'dojo/text!./Geocoder/templates/Geocoder.html',\n    'dojo/i18n!./Geocoder/nls/resource',\n\n    'xstyle/css!./Geocoder/css/Geocoder.css'\n], function (declare, _WidgetBase, _TemplatedMixin, a11yclick, lang, on, domClass, domStyle, Geocoder, MenuItem, SimpleMarkerSymbol, Graphic, InfoTemplate, GraphicsLayer, template, i18n) {\n    return declare([_WidgetBase, _TemplatedMixin], {\n        templateString: template,\n        i18n: i18n,\n        baseClass: 'gis_GeocoderDijit',\n        expanded: true,\n        collapsible: false,\n        geocoderOptions: {\n            autoComplete: true\n        },\n        reverseGeocodeTemplate: [\n            '<table class=\"attrTable\">',\n            '<tr valign=\"top\">', '<td class=\"attrName\">${i18n.labels.address}</td>', '<td class=\"attrValue\">${Address}</td>', '</tr>',\n            '<tr valign=\"top\">', '<td class=\"attrName\">${i18n.labels.neighborhood}</td>', '<td class=\"attrValue\">${Neighborhood}</td>', '</tr>',\n            '<tr valign=\"top\">', '<td class=\"attrName\">${i18n.labels.city}</td>', '<td class=\"attrValue\">${City}</td>', '</tr>',\n            '<tr valign=\"top\">', '<td class=\"attrName\">${i18n.labels.subregion}</td>', '<td class=\"attrValue\">${SubRegion}</td>', '</tr>',\n            '<tr valign=\"top\">', '<td class=\"attrName\">${i18n.labels.region}</td>', '<td class=\"attrValue\">${Region}</td>', '</tr>',\n            '<tr valign=\"top\">', '<td class=\"attrName\">${i18n.labels.postalCode}</td>', '<td class=\"attrValue\">${Postal}&nbsp;${PostalExt}</td>', '</tr>',\n            '<tr valign=\"top\">', '<td class=\"attrName\">${i18n.labels.countryCode}</td>', '<td class=\"attrValue\">${CountryCode}</td>', '</tr>',\n            '<tr valign=\"top\">', '<td class=\"attrName\">${i18n.labels.locatorName}</td>', '<td class=\"attrValue\">${Loc_name}</td>', '</tr>',\n            '</table>'\n        ].join(''),\n\n        postCreate: function () {\n            this.inherited(arguments);\n            var options = lang.mixin({}, this.geocoderOptions, {\n                map: this.map\n            });\n            this.geocoder = new Geocoder(options, this.geocoderNode);\n\n            on(this.geocoder, 'select', lang.hitch(this, function (e) {\n                if (e.result) {\n                    this.show();\n                }\n            }));\n\n            if (this.collapsible) {\n                on(this.map, 'pan-start', lang.hitch(this, function () {\n                    this.hide();\n                }));\n                this.own(\n                    on(this.searchNode, a11yclick, lang.hitch(this, this.toggle))\n                );\n            } else {\n                this.expanded = true;\n            }\n            this.geocoder.startup();\n            if (this.expanded === true) {\n                this.show();\n            } else {\n                this.hide();\n            }\n            if (this.mapRightClickMenu) {\n                this.addRightClickMenu();\n            }\n            if (this.mapExtentSearch) {\n                this.geocoder.arcgisGeocoder.searchExtent = this.map.extent.getExtent();\n                this.map.on('extent-change', lang.hitch(this, function (evt) {\n                    this.geocoder.arcgisGeocoder.searchExtent = evt.extent;\n                }));\n            }\n        },\n        addRightClickMenu: function () {\n            this.map.on('MouseDown', lang.hitch(this, function (evt) {\n                this.mapRightClickPoint = evt.mapPoint;\n            }));\n            this.mapRightClickMenu.addChild(new MenuItem({\n                label: this.i18n.labels.getAddressHere,\n                onClick: lang.hitch(this, 'reverseGeocode')\n            }));\n            this.symbol = new SimpleMarkerSymbol();\n            this.infoTemplate = new InfoTemplate('Location', this.reverseGeocodeTemplate);\n            this.graphics = new GraphicsLayer({\n                id: 'reverseGeocode'\n            });\n            this.map.addLayer(this.graphics);\n        },\n        toggle: function () {\n            var display = domStyle.get(this.searchContainerNode, 'display');\n            if (display === 'block') {\n                this.hide();\n            } else {\n                this.show();\n            }\n        },\n        hide: function () {\n            domStyle.set(this.searchContainerNode, 'display', 'none');\n            domClass.remove(this.containerNode, 'open');\n            if (this.geocoder) {\n                this.geocoder.blur();\n            }\n        },\n        show: function () {\n            domStyle.set(this.searchContainerNode, 'display', 'block');\n            domClass.add(this.containerNode, 'open');\n            if (this.geocoder && !this.expanded) {\n                this.geocoder.focus();\n            }\n        },\n        reverseGeocode: function () {\n            this.geocoder._task.locationToAddress(this.mapRightClickPoint, 1000, lang.hitch(this, 'reverseGeocodeComplete'));\n        },\n        reverseGeocodeComplete: function (res) {\n            var graphic = new Graphic(res.location, this.symbol, res.address, this.infoTemplate);\n            this.graphics.add(graphic);\n\n            this.map.infoWindow.clearFeatures();\n            this.map.infoWindow.setTitle(graphic.getTitle());\n            this.map.infoWindow.setContent(graphic.getContent());\n\n            var screenPnt = this.map.toScreen(res.location);\n            this.map.infoWindow.show(screenPnt, this.map.getInfoWindowAnchor(screenPnt));\n            on.once(this.map.infoWindow, 'hide', lang.hitch(this, function () {\n                this.graphics.clear();\n            }));\n        }\n    });\n});"]}