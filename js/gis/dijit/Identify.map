{"version":3,"file":"Identify.js","sources":["Identify.js"],"names":["define","declare","_WidgetBase","_TemplatedMixin","_WidgetsInTemplateMixin","MenuItem","lang","array","all","topic","query","domStyle","domClass","Moveable","Memory","IdentifyTask","IdentifyParameters","PopupTemplate","IdentifyTemplate","i18n","widgetsInTemplate","templateString","baseClass","mapClickMode","identifies","infoTemplates","ignoreOtherGraphics","createDefaultInfoTemplates","draggable","layerSeparator","allLayersId","postCreate","this","inherited","arguments","layers","forEach","layerInfos","layerInfo","lyrId","layer","id","map","getLayer","url","declaredClass","capabilities","toLowerCase","indexOf","infoTemplate","getInfoTemplate","layerId","setInfoTemplate","lastSL","lastIndexOf","substring","push","ref","identifyTask","parentWidget","on","hitch","evt","visible","createIdentifyLayerList","own","subscribe","executeIdentifyTask","mapRightClickMenu","addRightClickMenu","setupDraggable","mapRightClick","addChild","label","rightClickMenuItem","onClick","popups","handles","pointers","movable","length","set","handle","onMoveStart","pointer","remove","checkForGraphicInfoTemplate","infoWindow","hide","clearFeatures","shiftKey","ctrlKey","altKey","mapPoint","identifyParams","createIdentifyParams","identifiedlayers","selectedLayer","getSelectedLayer","layerIds","getLayerIds","params","clone","layerDefinitions","execute","setTitle","mapInfoWindow","identifyingTitle","setContent","show","then","graphic","_layer","hasOwnProperty","isNaN","point","tolerance","identifyTolerance","returnGeometry","layerOption","LAYER_OPTION_VISIBLE","geometry","mapExtent","extent","width","height","spatialReference","form","identifyFormDijit","get","identifyLayer","identifyLayerDijit","arrIds","split","selectedIds","getLayerInfos","includeSubLayer","identifyCallback","responseArray","fSet","response","i","result","feature","undefined","setFeatures","identifyError","err","publish","source","error","handleRightClick","popup","content","createInfoTemplate","fieldInfos","layerName","getLayerName","attributes","prop","fieldName","_outFields","fields","foundField","filter","field","name","alias","title","showAttachments","identifyItems","selectedId","sep","sort","a","b","unshift","labels","allVisibleLayers","identify","data","subLayerIds","visibleLayers","layerVisibleAtCurrentScale","lyr","_titleForLegend","mapScale","getScale","maxScale","minScale","setMapClickMode","mode","graphicsLayerIds","layerID"],"mappings":"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","sourcesContent":["define([\n    'dojo/_base/declare',\n    'dijit/_WidgetBase',\n    'dijit/_TemplatedMixin',\n    'dijit/_WidgetsInTemplateMixin',\n    'dijit/MenuItem',\n    'dojo/_base/lang',\n    'dojo/_base/array',\n    'dojo/promise/all',\n    'dojo/topic',\n    'dojo/query',\n    'dojo/dom-style',\n    'dojo/dom-class',\n    'dojo/dnd/Moveable',\n    'dojo/store/Memory',\n    'esri/tasks/IdentifyTask',\n    'esri/tasks/IdentifyParameters',\n    'esri/dijit/PopupTemplate',\n    'dojo/text!./Identify/templates/Identify.html',\n    'dojo/i18n!./Identify/nls/resource',\n\n    'dijit/form/Form',\n    'dijit/form/FilteringSelect',\n    'xstyle/css!./Identify/css/Identify.css'\n], function (declare, _WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin, MenuItem, lang, array, all, topic, query, domStyle, domClass, Moveable, Memory, IdentifyTask, IdentifyParameters, PopupTemplate, IdentifyTemplate, i18n) {\n    return declare([_WidgetBase, _TemplatedMixin, _WidgetsInTemplateMixin], {\n        widgetsInTemplate: true,\n        templateString: IdentifyTemplate,\n        baseClass: 'gis_IdentifyDijit',\n        i18n: i18n,\n\n        mapClickMode: null,\n        identifies: {},\n        infoTemplates: {},\n        ignoreOtherGraphics: true,\n        createDefaultInfoTemplates: true,\n        draggable: false,\n        layerSeparator: '||',\n        allLayersId: '***',\n\n        postCreate: function () {\n            this.inherited(arguments);\n            if (!this.identifies) {\n                this.identifies = {};\n            }\n            this.layers = [];\n            array.forEach(this.layerInfos, function (layerInfo) {\n                var lyrId = layerInfo.layer.id;\n                var layer = this.map.getLayer(lyrId);\n                if (layer) {\n                    var url = layer.url;\n\n                    // handle feature layers\n                    if (layer.declaredClass === 'esri.layers.FeatureLayer') {\n\n                        // If is a feature layer that does not support\n                        // Identify (Feature Service), create an\n                        // infoTemplate for the graphic features. Create\n                        // it only if one does not already exist.\n                        if (layer.capabilities && layer.capabilities.toLowerCase().indexOf('data') < 0) {\n                            if (!layer.infoTemplate) {\n                                var infoTemplate = this.getInfoTemplate(layer, layer.layerId);\n                                if (infoTemplate) {\n                                    layer.setInfoTemplate(infoTemplate);\n                                    return;\n                                }\n                            }\n                        }\n\n                        // If it is a feature Layer, we get the base url\n                        // for the map service by removing the layerId.\n                        var lastSL = url.lastIndexOf('/' + layer.layerId);\n                        if (lastSL > 0) {\n                            url = url.substring(0, lastSL);\n                        }\n                    }\n\n                    this.layers.push({\n                        ref: layer,\n                        layerInfo: layerInfo,\n                        identifyTask: new IdentifyTask(url)\n                    });\n\n                    // rebuild the layer selection list when any layer is hidden\n                    // but only if we have a UI\n                    if (this.parentWidget) {\n                        layer.on('visibility-change', lang.hitch(this, function (evt) {\n                            if (evt.visible === false) {\n                                this.createIdentifyLayerList();\n                            }\n                        }));\n                    }\n                }\n            }, this);\n\n            this.own(topic.subscribe('mapClickMode/currentSet', lang.hitch(this, 'setMapClickMode')));\n\n            this.map.on('click', lang.hitch(this, function (evt) {\n                if (this.mapClickMode === 'identify') {\n                    this.executeIdentifyTask(evt);\n                }\n            }));\n            if (this.mapRightClickMenu) {\n                this.addRightClickMenu();\n            }\n\n            // rebuild the layer selection list when the map is updated\n            // but only if we have a UI\n            if (this.parentWidget) {\n                this.createIdentifyLayerList();\n                this.map.on('update-end', lang.hitch(this, function () {\n                    this.createIdentifyLayerList();\n                }));\n            }\n\n            if (this.draggable) {\n                this.setupDraggable();\n            }\n        },\n        addRightClickMenu: function () {\n            this.map.on('MouseDown', lang.hitch(this, function (evt) {\n                this.mapRightClick = evt;\n            }));\n            this.mapRightClickMenu.addChild(new MenuItem({\n                label: this.i18n.rightClickMenuItem.label,\n                onClick: lang.hitch(this, 'handleRightClick')\n            }));\n        },\n        setupDraggable: function () {\n            var popups, handles, pointers, movable;\n            // the popup, handle (title) and pointers (arrows)\n            popups  = query('div.esriPopup');\n            handles = query('div.esriPopup div.titlePane div.title');\n            pointers = query('div.esriPopup div.outerPointer, div.esriPopup div.pointer');\n\n            if (popups.length > 0 && handles.length > 0) {\n                domStyle.set(handles[0], 'cursor', 'move');\n                movable = new Moveable(popups[0], {\n                    handle: handles[0]\n                });\n\n                if (pointers.length > 0) {\n                    // hide the pointer arrow when you move the popup\n                    movable.onMoveStart = function () {\n                        array.forEach(pointers, function (pointer) {\n                            domClass.remove(pointer, 'left right top bottom topLeft topRight bottomLeft bottomRight');\n                        });\n                    };\n                }\n            }\n        },\n        executeIdentifyTask: function (evt) {\n            if (!this.checkForGraphicInfoTemplate(evt)) {\n                return;\n            }\n\n            this.map.infoWindow.hide();\n            this.map.infoWindow.clearFeatures();\n\n            // don't identify on shift-click, ctrl-click or alt-click\n            if (evt.shiftKey || evt.ctrlKey || evt.altKey) {\n                return;\n            }\n\n            var mapPoint = evt.mapPoint;\n            var identifyParams = this.createIdentifyParams(mapPoint);\n            var identifies = [];\n            var identifiedlayers = [];\n            var selectedLayer = this.getSelectedLayer();\n\n            array.forEach(this.layers, lang.hitch(this, function (layer) {\n                var layerIds = this.getLayerIds(layer, selectedLayer);\n                if (layerIds.length > 0) {\n                    var params = lang.clone(identifyParams);\n                    params.layerDefinitions = layer.ref.layerDefinitions;\n                    params.layerIds = layerIds;\n                    identifies.push(layer.identifyTask.execute(params));\n                    identifiedlayers.push(layer);\n                }\n            }));\n\n            if (identifies.length > 0) {\n                this.map.infoWindow.setTitle( this.i18n.mapInfoWindow.identifyingTitle );\n                this.map.infoWindow.setContent('<div class=\"loading\"></div>');\n                this.map.infoWindow.show(mapPoint);\n                all(identifies).then(lang.hitch(this, 'identifyCallback', identifiedlayers), lang.hitch(this, 'identifyError'));\n            }\n        },\n\n        checkForGraphicInfoTemplate: function (evt) {\n            if (evt.graphic) {\n                // handle feature layers that come from a feature service\n                // and may already have an info template\n                var layer = evt.graphic._layer;\n                if (layer.infoTemplate || (layer.capabilities && layer.capabilities.toLowerCase().indexOf('data') < 0)) {\n                    return false;\n                }\n\n                if (!this.ignoreOtherGraphics) {\n                    // handles graphic from another type of graphics layer\n                    // added to the map and so the identify is not found\n                    if (!this.identifies.hasOwnProperty(layer.id)) {\n                        return false;\n                    }\n                    // no layerId (graphics) or sublayer not defined\n                    if (isNaN(layer.layerId) || !this.identifies[layer.id].hasOwnProperty(layer.layerId)) {\n                        return false;\n                    }\n                }\n\n            }\n\n            return true;\n        },\n\n        createIdentifyParams: function (point) {\n            var identifyParams = new IdentifyParameters();\n            identifyParams.tolerance = this.identifyTolerance;\n            identifyParams.returnGeometry = true;\n            identifyParams.layerOption = IdentifyParameters.LAYER_OPTION_VISIBLE;\n            identifyParams.geometry = point;\n            identifyParams.mapExtent = this.map.extent;\n            identifyParams.width = this.map.width;\n            identifyParams.height = this.map.height;\n            identifyParams.spatialReference = this.map.spatialReference;\n\n            return identifyParams;\n        },\n\n        getSelectedLayer: function () {\n            var selectedLayer = this.allLayersId; // default is all layers\n            // if we have a UI, then get the selected layer\n            if (this.parentWidget) {\n                var form = this.identifyFormDijit.get('value');\n                if (!form.identifyLayer || form.identifyLayer === '') {\n                    this.identifyLayerDijit.set('value', selectedLayer);\n                } else {\n                    selectedLayer = form.identifyLayer;\n                }\n            }\n            return selectedLayer;\n        },\n\n        getLayerIds: function (layer, selectedLayer) {\n            var arrIds = selectedLayer.split(this.layerSeparator);\n            var allLayersId = this.allLayersId;\n            var ref = layer.ref,\n                selectedIds = layer.layerInfo.layerIds;\n            var layerIds = [];\n            if (ref.visible) {\n                if (arrIds[0] === allLayersId || ref.id === arrIds[0]) {\n                    if (arrIds.length > 1 && arrIds[1]) { // layer explicity requested\n                        layerIds = [arrIds[1]];\n                    } else if ((ref.declaredClass === 'esri.layers.FeatureLayer') && !isNaN(ref.layerId)) { // feature layer\n                        // do not allow feature layer that does not support\n                        // Identify (Feature Service)\n                        if (ref.capabilities && ref.capabilities.toLowerCase().indexOf('data') > 0) {\n                            layerIds = [ref.layerId];\n                        }\n                    } else if (ref.layerInfos) {\n                        layerIds = this.getLayerInfos(ref, selectedIds);\n                    }\n                }\n            }\n            return layerIds;\n        },\n\n        getLayerInfos: function (ref, selectedIds) {\n            var layerIds = [];\n            array.forEach(ref.layerInfos, lang.hitch(this, function (layerInfo) {\n                if (!this.includeSubLayer(layerInfo, ref, selectedIds)) {\n                    return;\n                }\n                layerIds.push(layerInfo.id);\n            }));\n            return layerIds;\n\n        },\n\n        identifyCallback: function (identifiedlayers, responseArray) {\n            var fSet = [];\n            array.forEach(responseArray, function (response, i) {\n                var ref = identifiedlayers[i].ref;\n                array.forEach(response, function (result) {\n                    result.feature.geometry.spatialReference = this.map.spatialReference; //temp workaround for ags identify bug. remove when fixed.\n                    if (result.feature.infoTemplate === undefined) {\n                        var infoTemplate = this.getInfoTemplate(ref, null, result);\n                        if (infoTemplate) {\n                            result.feature.setInfoTemplate(infoTemplate);\n                        } else {\n                            return;\n                        }\n                    }\n                    fSet.push(result.feature);\n                }, this);\n            }, this);\n            this.map.infoWindow.setFeatures(fSet);\n        },\n        identifyError: function (err) {\n            this.map.infoWindow.hide();\n            topic.publish('viewer/handleError', {\n                source: 'Identify',\n                error: err\n            });\n        },\n        handleRightClick: function () {\n            this.executeIdentifyTask(this.mapRightClick);\n        },\n\n        getInfoTemplate: function (layer, layerId, result) {\n            var popup = null, \n                content = null;\n            if (result) {\n                layerId = result.layerId;\n            } else if (layerId === null) {\n                layerId = layer.layerId;\n            }\n\n            // see if we have a Popup config defined for this layer\n            if (this.identifies.hasOwnProperty(layer.id)) {\n                if (this.identifies[layer.id].hasOwnProperty(layerId)) {\n                    popup = this.identifies[layer.id][layerId];\n                    if (popup) {\n                        if (typeof (popup.declaredClass) !== 'string') { // has it been created already?\n                            if (popup.content) {\n                                content = popup.content;\n                            }\n                            popup = new PopupTemplate(popup);\n                            if (content) {\n                                popup.setContent(content);\n                            }\n                            this.identifies[layer.id][layerId] = popup;\n                        }\n                    }\n                }\n            }\n\n            // if no Popup config found, create one with all attributes or layer fields\n            if (!popup) {\n                popup = this.createInfoTemplate(layer, layerId, result);\n            }\n\n            return popup;\n        },\n\n        createInfoTemplate: function (layer, layerId, result) {\n            var popup = null, fieldInfos = [];\n\n            var layerName = this.getLayerName(layer);\n            if (result) {\n                layerName = result.layerName;\n            }\n\n            // from the results\n            if (result && result.feature) {\n                var attributes = result.feature.attributes;\n                if (attributes) {\n                    for (var prop in attributes) {\n                        if (attributes.hasOwnProperty(prop)) {\n                            fieldInfos.push({\n                                fieldName: prop,\n                                visible: true\n                            });\n                        }\n                    }\n                }\n\n            // from the outFields of the layer\n            } else if (layer._outFields && (layer._outFields.length) && (layer._outFields[0] !== '*')) {\n\n                var fields = layer.fields;\n                array.forEach(layer._outFields, function (fieldName) {\n                    var foundField = array.filter(fields, function (field) {\n                        return (field.name === fieldName);\n                    });\n                    if (foundField.length > 0) {\n                        fieldInfos.push({\n                            fieldName: foundField[0].name,\n                            label: foundField[0].alias,\n                            visible: true\n                        });\n                    }\n                });\n\n            // from the fields layer\n            } else if (layer.fields) {\n\n                array.forEach(layer.fields, function (field) {\n                    fieldInfos.push({\n                        fieldName: field.name,\n                        label: field.alias,\n                        visible: true\n                    });\n                });\n            }\n\n            if (fieldInfos.length > 0) {\n                popup = new PopupTemplate({\n                    title: layerName,\n                    fieldInfos: fieldInfos,\n                    showAttachments: (layer.hasAttachments)\n                });\n                if (!this.identifies[layer.id]) {\n                    this.identifies[layer.id] = {};\n                }\n                this.identifies[layer.id][layerId] = popup;\n            }\n\n            return popup;\n        },\n\n        createIdentifyLayerList: function () {\n            var id = null;\n            var identifyItems = [];\n            var selectedId = this.identifyLayerDijit.get('value');\n            var sep = this.layerSeparator;\n\n            array.forEach(this.layers, lang.hitch(this, function (layer) {\n                var ref = layer.ref,\n                    selectedIds = layer.layerInfo.layerIds;\n                // only include layers that are currently visible\n                if (ref.visible) {\n                    var name = this.getLayerName(layer);\n                    if ((ref.declaredClass === 'esri.layers.FeatureLayer') && !isNaN(ref.layerId)) { // feature layer\n                        identifyItems.push({\n                            name: name,\n                            id: ref.id + sep + ref.layerId\n                        });\n                        // previously selected layer is still visible so keep it selected\n                        if (ref.id + sep + ref.layerId === selectedId) {\n                            id = selectedId;\n                        }\n                    } else { // dynamic layer\n                        array.forEach(ref.layerInfos, lang.hitch(this, function (layerInfo) {\n                            if (!this.includeSubLayer(layerInfo, ref, selectedIds)) {\n                                return;\n                            }\n                            identifyItems.push({\n                                name: name + ' \\\\ ' + layerInfo.name,\n                                id: ref.id + sep + layerInfo.id\n                            });\n                            // previously selected sublayer is still visible so keep it selected\n                            if (ref.id + sep + layerInfo.id === selectedId) {\n                                id = selectedId;\n                            }\n                        }));\n                    }\n                }\n            }));\n\n            identifyItems.sort(function (a, b) {\n                return (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0);\n            });\n\n            this.identifyLayerDijit.set('disabled', (identifyItems.length < 1));\n            if (identifyItems.length > 0) {\n                identifyItems.unshift({\n                    name: this.i18n.labels.allVisibleLayers,\n                    id: '***'\n                });\n                if (!id) {\n                    id = identifyItems[0].id;\n                }\n            }\n            var identify = new Memory({\n                data: identifyItems\n            });\n            this.identifyLayerDijit.set('store', identify);\n            this.identifyLayerDijit.set('value', id);\n        },\n\n        includeSubLayer: function (layerInfo, ref, selectedIds) {\n            // exclude group layers\n            if (layerInfo.subLayerIds !== null) {\n                return false;\n            }\n            // only include sublayers that are currently visible\n            if (array.indexOf(ref.visibleLayers, layerInfo.id) < 0) {\n                return false;\n            }\n            // only include sublayers that are within the current map scale\n            if (!this.layerVisibleAtCurrentScale(layerInfo)) {\n                return false;\n            }\n\n            // restrict which layers are included\n            if (selectedIds) {\n                if (array.indexOf(selectedIds, layerInfo.id) < 0) {\n                    return false;\n                }\n            }\n\n            // don't allow the layer if we don't have an  infoTemplate\n            // already and creating a default one is not desired\n            if (!this.createDefaultInfoTemplates) {\n                var infoTemplate = this.getInfoTemplate(ref, layerInfo.id);\n                if (!infoTemplate) {\n                    return false;\n                }\n            }\n\n            // all tests pass so include this sublayer\n            return true;\n        },\n\n        getLayerName: function (layer) {\n            var name = null;\n            if (layer.layerInfo) {\n                name = layer.layerInfo.title;\n            }\n            if (!name) {\n                array.forEach(this.layers, function (lyr) {\n                    if (lyr.ref.id === layer.id) {\n                        name = lyr.layerInfo.title;\n                        return;\n                    }\n                });\n            }\n            if (!name) {\n                name = layer.name;\n                if (!name && layer.ref) {\n                    name = layer.ref._titleForLegend; // fall back to old method using title from legend\n                }\n            }\n            return name;\n        },\n\n        layerVisibleAtCurrentScale: function (layer) {\n            var mapScale = this.map.getScale();\n            return !(((layer.maxScale !== 0 && mapScale < layer.maxScale) || (layer.minScale !== 0 && mapScale > layer.minScale)));\n        },\n\n        setMapClickMode: function (mode) {\n            this.mapClickMode = mode;\n            var map = this.map;\n            array.forEach(map.graphicsLayerIds, function (layerID) {\n                var layer = map.getLayer(layerID);\n                if (layer) {\n                    // add back any infoTemplates that\n                    // had been previously removed\n                    if (mode === 'identify') {\n                        if (this.infoTemplates[layer.id]) {\n                            layer.infoTemplate = lang.clone(this.infoTemplates[layer.id]);\n                        }\n                    // remove any infoTemplates that might\n                    // interfere with clicking on a feature\n                    } else {\n                        if (layer.infoTemplate) {\n                            this.infoTemplates[layer.id] = lang.clone(layer.infoTemplate);\n                            layer.infoTemplate = null;\n                        }\n                    }\n                }\n            }, this);\n        }\n    });\n});"]}